const fs=require('fs');
const path = require("path");
const tp=require('./Template');
const vl=require('./Variable');
var lc = (function(){
    var unique;
    function Construct(){
        this._dynamic=true;
        this._listen={};
        this._template='';
        this._compile='';
        this._extName='';
        this._outpath='';
        this.init=function(_path){
            if(unique._outpath){
                return;
            }
            this._outpath=_path;
            var obj=JSON.parse(fs.readFileSync(__dirname+'/config.json'));
            this._template=this._outpath+"/"+obj['template_file'];
            this._compile=this._outpath+"/"+obj['compile_file'];
            this._dynamic=obj['dynamic'];
            this._extName=obj['extName'];
            MD(this._template,'0777',function(e){if(e)console.log(e);});
            MD(this._compile,'0777',function(e){if(e)console.log(e);});
            function MD(dirPath, mode, callback){
                fs.exists(dirPath, function (exists){
                    if(!exists){
                        MD(path.dirname(dirPath), mode, function (){
                            fs.mkdir(dirPath, mode, callback);
                        });
                    }else{
                        callback();
                    }
                });
            }
        };
        this.display=function(fileName,callback){
            fileName=unique._template+"/"+fileName;
            if(unique._dynamic && !unique._listen[fileName]){
                var listen=(function () {
                    return function(){
                        console.log("文件" + fileName + " 内容刚刚改变" );
                        unique._listen[fileName]=1;
                    };
                })();
                fs.watch(fileName,listen);
                unique._listen[fileName]=1;
            }
            var l=unique._extName.length;
            var path=fileName.slice(fileName.lastIndexOf("/")+1,fileName.length-l);
            if(unique._dynamic && unique._listen[fileName]==1){
                tp(fileName,unique._compile+"/"+path+'.js',function(){
                    delete require.cache[require.resolve(unique._compile+"/"+path)];
                    var D=require(unique._compile+"/"+path);
                    unique._listen[fileName]=2;
                    callback(D);
                });
            }else{
                var D=require(unique._compile+"/"+path);
                callback(D);
            }
        };
        this.getValObj=function(){
            return new vl();
        };
    }
    unique = new Construct();
    return unique;
})();
module.exports=lc;